/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.senac.tads.pi3.ui.principal;

import static br.senac.tads.pi3.services.produtos.ServicoProduto.cadastrarProduto;
import br.senac.tads.pi3.services.utils.ServiceUtils;
import br.senac.tads.pi3.ui.produto.FormCadastrarProdutos;
import br.senac.tads.pi3.ui.produto.FormConsultarProdutos;
import br.senac.tads.pi3.ui.produto.FormEditarProduto;
import java.awt.Dimension;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;



/**
 *
 * @author Kelly
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private FormCadastrarProdutos cadastrarProduto = null;
    private FormConsultarProdutos consultarProduto = null;
    private FormEditarProduto editarProduto = null;
    
    // Construtor e inicialização de componentes
    public TelaPrincipal() {
        //Verifica a conexão com a fonte de dados e prende o usuário
        //num loop de tentativas de conexão até que a conexão esteja
        //disponível ou ele desista de tentar, situação onde o sistema
        //é encerrado
        this.checkDs();
        initComponents();
        //Faz com que a janela seja aberta no meio da tela
        this.setLocationRelativeTo(null);        
    }
    
    private void checkDs() {
        //Inicializa uma flag indicadora da não
        //existência de conexão
        boolean isConnected = false;
        //Loope de tentativas de conexão
        do {
            //Chama a classe "ServiceUtils" para verificar a existência de
            //conexão com a fonte de dados
            if (ServiceUtils.checkConnection()) {
                //Se a conexão teve sucesso, indica a existência de conexão
                //e interrompe o loop
                isConnected = true;
                break;
            }

            //Se chegamos aqui, a conexão não está funcionando. Devemos
            //verificar com o usuário se ele quer tentar de novo ou sair
            //do programa
            int resposta = JOptionPane.showConfirmDialog(rootPane, "Não foi "
                    + "encontrada conexão com a fonte de dados. \n"
                    + "Verifique se o servidor da fonte de dados foi iniciado "
                    + "e tente novamente.\n\n"
                    + "Pressione \"Sim\" para tentar se conectar a fonte de "
                    + "dados novamente.", "Sem fonte de dados",
                    JOptionPane.YES_NO_OPTION);
            //Se a resposta for negativa, fecha o programa.
            //Senão, segue com o loop
            if (resposta == JOptionPane.NO_OPTION
                    || resposta == JOptionPane.CLOSED_OPTION) {
                System.exit(0);
            }
        } //Fica no loop enquanto não houver conexão
        while (!isConnected);
    }
    
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        desktop = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuReserva = new javax.swing.JMenu();
        FormCadastrarProduto = new javax.swing.JMenuItem();
        FormConsultarProduto = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 621, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );

        menuReserva.setText("Produtos");

        FormCadastrarProduto.setText("Cadastrar Produto");
        FormCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormCadastrarProdutoActionPerformed(evt);
            }
        });
        menuReserva.add(FormCadastrarProduto);

        FormConsultarProduto.setText("Consultar Produto");
        FormConsultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormConsultarProdutoActionPerformed(evt);
            }
        });
        menuReserva.add(FormConsultarProduto);

        jMenuBar1.add(menuReserva);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FormCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormCadastrarProdutoActionPerformed
               
        //Verifica se não há uma janela de cadastro de produto visível.
        //Caso afirmativo, cria uma janela de cadastro de produto e a exibe
        if (cadastrarProduto == null || !cadastrarProduto.isDisplayable()) {
            cadastrarProduto = new FormCadastrarProdutos();
            desktop.add(cadastrarProduto);
            this.openFrameInCenter(cadastrarProduto);
        }
        cadastrarProduto.toFront();
    }//GEN-LAST:event_FormCadastrarProdutoActionPerformed

    private void FormConsultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormConsultarProdutoActionPerformed
        // TODO add your handling code here:
        //Verifica se não há uma janela de consulta de produto visível.
        //Caso afirmativo, cria uma janela de consulta de produto e a exibe
        if (consultarProduto == null || !consultarProduto.isDisplayable()) {
            consultarProduto = new FormConsultarProdutos();
            desktop.add(consultarProduto);
            this.openFrameInCenter(consultarProduto);
        }
        consultarProduto.toFront(); 
    }//GEN-LAST:event_FormConsultarProdutoActionPerformed

    //Abre um internal frame centralizado na tela
    public void openFrameInCenter(JInternalFrame jif) {
        Dimension desktopSize = desktop.getSize();
        Dimension jInternalFrameSize = jif.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        jif.setLocation(width, height);
        jif.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    public FormCadastrarProdutos getCadastrarProduto() {
        return cadastrarProduto;
    }

    /**
     * @param cadastrarProduto the cadastrarProduto to set
     */
    public void setCadastrarProduto(FormCadastrarProdutos cadastrarProduto) {
        this.cadastrarProduto = cadastrarProduto;
    }

    /**
     * @return the consultarProduto
     */
    public FormConsultarProdutos getConsultarProduto() {
        return consultarProduto;
    }

    /**
     * @param consultarProduto the consultarProduto to set
     */
    public void setConsultarProduto(FormConsultarProdutos consultarProduto) {
        this.consultarProduto = consultarProduto;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FormCadastrarProduto;
    private javax.swing.JMenuItem FormConsultarProduto;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenu menuReserva;
    // End of variables declaration//GEN-END:variables
}
